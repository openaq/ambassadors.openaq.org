---
import type {
  InferGetStaticPropsType,
  GetStaticPaths,
} from "astro";

import PageLayout from "@layouts/PageLayout.astro";
import {
  getCollection,
  render,
  type CollectionEntry,
} from "astro:content";
import { Image } from "astro:assets";
import SocialIcons from "@components/people/SocialIcons.astro";
import Youtube from "@components/Youtube.astro";
import { ISO_A2 } from "src/utils/constants";
import { Schema } from "astro-seo-schema"
import { personStructuredData, type SocialsDefinition } from 'src/utils/structuredData';

export const getStaticPaths = (async () => {
  const ambassadors = await getCollection("ambassadors");

  return [...ambassadors].map((ambassador) => ({
    params: { slug: ambassador.id },
    props: { ambassador },
  }));
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const socials = (entry: CollectionEntry<"ambassadors">): SocialsDefinition => {
  return {
    x: entry.data.x,
    mastadon: entry.data.mastadon,
    linkedin: entry.data.linkedin,
    github: entry.data.github,
    orcid: entry.data.orcid,
    researchGate: entry.data.researchGate,
    googleScholar: entry.data.googleScholar,
    bluesky: entry.data.bluesky,
  };
};

const { ambassador } = Astro.props;

const cohorts = await getCollection("cohorts");

const cohort = cohorts.filter((o) => o.data.year === ambassador.data.year)[0];

const { Content } = await render(ambassador);
---

<style lang="scss">
  @use "openaq-design-system/scss/variables" as variables;
  @use "openaq-design-system/scss/mixins/index" as mixins;

  .person-content {
    display: flex;
    justify-content: center;
    margin: 0 0 100px;
    position: relative;

    .person {
      display: flex;
      flex-direction: column;

      &__img {
        width: 300px;
        height: auto;
      }

      .person-description {
        border-top: 6px solid variables.$sky100;

        .person-name {
          @include mixins.display1;
          margin: 40px 0 0 0;
        }

        .person-title {
          @include mixins.heading1;
          color: variables.$sky120;
          margin: 0 0 10px 0;
        }

        .person-country {
          margin: 0 0 30px 0;
        }

        .person-quote {
          @include mixins.body1;
          margin: 40px 0;
        }

        .person-bio {
          margin: 40px 0;

          h1,
          h2,
          h3,
          h4 {
            color: variables.$sky120;
            @include mixins.heading2;
          }

          p {
            @include mixins.body2;
            margin: 15px 0;
          }
        }
      }
    }
  }

  .person-image-placeholder {
    position: relative;
    overflow: hidden;
    width: 252px;
    height: 252px;

    .bubble-md {
      position: absolute;
      bottom: -14px;
    }

    .bubble-sm {
      position: absolute;
      bottom: -14px;
    }
  }
  .video-section {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  margin-bottom: 100px;
  h2 {
    margin: 0;
    padding: 0;
    @include mixins.heading1;
    color: variables.$sky120;
  }

  .youtube-video {
    width: 100%;
    max-width: 800px;
    aspect-ratio: 16 / 9;
  }
}
</style>

<PageLayout frontmatter={ambassador.data}>
  <Schema slot="structured-data"
  item={personStructuredData(socials(ambassador),ambassador)}
/>
  <div class="person-content">
    <article class="person">
      <Image
        src={ambassador.data.image}
        height={300}
        width={300}
        loading="eager"
        alt=`${ambassador.data.name} portrait`
      />

      <div class="person-description">
        <h1 class="person-name gradient-title">{ambassador.data.name}</h1>
        <h2 class="person-title">{ambassador.data.year}</h2>
        <h3 class="person-country">{ISO_A2[ambassador.data.country_iso!]}</h3>
        <SocialIcons {...socials(ambassador)} />
        <div class="person-bio"><Content /></div>
      </div>
    </article>
  </div>
  <section class="video-section">
    {
      cohort.data.youtube_id && ambassador.data.timestamp ? (
      <h2>Capstone presentation</h2>
      <div class="youtube-video">
        <Youtube
          youtubeId={cohort.data.youtube_id}
          timestamp={ambassador.data.timestamp}
        />
      </div>
      ) : (
        ambassador.data.timestamp && (
         ""
        )
      )
    }
  </section>
</PageLayout>
